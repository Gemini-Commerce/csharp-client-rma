/*
 * RMA Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = rma.Client.OpenAPIDateConverter;

namespace rma.Model
{
    /// <summary>
    /// RmaReturnProduct
    /// </summary>
    [DataContract(Name = "rmaReturnProduct")]
    public partial class RmaReturnProduct : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RmaReturnProduct" /> class.
        /// </summary>
        /// <param name="grn">grn.</param>
        /// <param name="reason">reason.</param>
        /// <param name="requested">requested.</param>
        /// <param name="approved">approved.</param>
        /// <param name="verified">verified.</param>
        /// <param name="refunded">refunded.</param>
        public RmaReturnProduct(string grn = default(string), string reason = default(string), RmaReturnProductProperty requested = default(RmaReturnProductProperty), RmaReturnProductProperty approved = default(RmaReturnProductProperty), RmaReturnProductProperty verified = default(RmaReturnProductProperty), RmaReturnProductProperty refunded = default(RmaReturnProductProperty))
        {
            this.Grn = grn;
            this.Reason = reason;
            this.Requested = requested;
            this.Approved = approved;
            this.Verified = verified;
            this.Refunded = refunded;
        }

        /// <summary>
        /// Gets or Sets Grn
        /// </summary>
        [DataMember(Name = "grn", EmitDefaultValue = false)]
        public string Grn { get; set; }

        /// <summary>
        /// Gets or Sets Reason
        /// </summary>
        [DataMember(Name = "reason", EmitDefaultValue = false)]
        public string Reason { get; set; }

        /// <summary>
        /// Gets or Sets Requested
        /// </summary>
        [DataMember(Name = "requested", EmitDefaultValue = false)]
        public RmaReturnProductProperty Requested { get; set; }

        /// <summary>
        /// Gets or Sets Approved
        /// </summary>
        [DataMember(Name = "approved", EmitDefaultValue = false)]
        public RmaReturnProductProperty Approved { get; set; }

        /// <summary>
        /// Gets or Sets Verified
        /// </summary>
        [DataMember(Name = "verified", EmitDefaultValue = false)]
        public RmaReturnProductProperty Verified { get; set; }

        /// <summary>
        /// Gets or Sets Refunded
        /// </summary>
        [DataMember(Name = "refunded", EmitDefaultValue = false)]
        public RmaReturnProductProperty Refunded { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RmaReturnProduct {\n");
            sb.Append("  Grn: ").Append(Grn).Append("\n");
            sb.Append("  Reason: ").Append(Reason).Append("\n");
            sb.Append("  Requested: ").Append(Requested).Append("\n");
            sb.Append("  Approved: ").Append(Approved).Append("\n");
            sb.Append("  Verified: ").Append(Verified).Append("\n");
            sb.Append("  Refunded: ").Append(Refunded).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
