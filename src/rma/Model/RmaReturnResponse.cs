/*
 * RMA Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = rma.Client.OpenAPIDateConverter;

namespace rma.Model
{
    /// <summary>
    /// RmaReturnResponse
    /// </summary>
    [DataContract(Name = "rmaReturnResponse")]
    public partial class RmaReturnResponse : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets PreferredRefundMethod
        /// </summary>
        [DataMember(Name = "preferredRefundMethod", EmitDefaultValue = false)]
        public RmaRefundMethod? PreferredRefundMethod { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="RmaReturnResponse" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="grn">grn.</param>
        /// <param name="orderGrn">orderGrn.</param>
        /// <param name="status">status.</param>
        /// <param name="products">products.</param>
        /// <param name="preferredRefundMethod">preferredRefundMethod.</param>
        /// <param name="refundShippingCost">refundShippingCost.</param>
        /// <param name="refundPaymentCost">refundPaymentCost.</param>
        /// <param name="customerInfo">customerInfo.</param>
        /// <param name="returnAddress">returnAddress.</param>
        /// <param name="note">note.</param>
        /// <param name="history">history.</param>
        /// <param name="createdAt">createdAt.</param>
        /// <param name="updatedAt">updatedAt.</param>
        /// <param name="orderData">orderData.</param>
        public RmaReturnResponse(string id = default(string), string grn = default(string), string orderGrn = default(string), string status = default(string), List<RmaReturnProduct> products = default(List<RmaReturnProduct>), RmaRefundMethod? preferredRefundMethod = default(RmaRefundMethod?), bool refundShippingCost = default(bool), bool refundPaymentCost = default(bool), RmaCustomerInfo customerInfo = default(RmaCustomerInfo), RmaPostalAddress returnAddress = default(RmaPostalAddress), string note = default(string), List<RmaReturnHistory> history = default(List<RmaReturnHistory>), DateTime createdAt = default(DateTime), DateTime updatedAt = default(DateTime), RmaOrderData orderData = default(RmaOrderData))
        {
            this.Id = id;
            this.Grn = grn;
            this.OrderGrn = orderGrn;
            this.Status = status;
            this.Products = products;
            this.PreferredRefundMethod = preferredRefundMethod;
            this.RefundShippingCost = refundShippingCost;
            this.RefundPaymentCost = refundPaymentCost;
            this.CustomerInfo = customerInfo;
            this.ReturnAddress = returnAddress;
            this.Note = note;
            this.History = history;
            this.CreatedAt = createdAt;
            this.UpdatedAt = updatedAt;
            this.OrderData = orderData;
            this.AdditionalProperties = new Dictionary<string, object>();
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Grn
        /// </summary>
        [DataMember(Name = "grn", EmitDefaultValue = false)]
        public string Grn { get; set; }

        /// <summary>
        /// Gets or Sets OrderGrn
        /// </summary>
        [DataMember(Name = "orderGrn", EmitDefaultValue = false)]
        public string OrderGrn { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets Products
        /// </summary>
        [DataMember(Name = "products", EmitDefaultValue = false)]
        public List<RmaReturnProduct> Products { get; set; }

        /// <summary>
        /// Gets or Sets RefundShippingCost
        /// </summary>
        [DataMember(Name = "refundShippingCost", EmitDefaultValue = true)]
        public bool RefundShippingCost { get; set; }

        /// <summary>
        /// Gets or Sets RefundPaymentCost
        /// </summary>
        [DataMember(Name = "refundPaymentCost", EmitDefaultValue = true)]
        public bool RefundPaymentCost { get; set; }

        /// <summary>
        /// Gets or Sets CustomerInfo
        /// </summary>
        [DataMember(Name = "customerInfo", EmitDefaultValue = false)]
        public RmaCustomerInfo CustomerInfo { get; set; }

        /// <summary>
        /// Gets or Sets ReturnAddress
        /// </summary>
        [DataMember(Name = "returnAddress", EmitDefaultValue = false)]
        public RmaPostalAddress ReturnAddress { get; set; }

        /// <summary>
        /// Gets or Sets Note
        /// </summary>
        [DataMember(Name = "note", EmitDefaultValue = false)]
        public string Note { get; set; }

        /// <summary>
        /// Gets or Sets History
        /// </summary>
        [DataMember(Name = "history", EmitDefaultValue = false)]
        public List<RmaReturnHistory> History { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name = "createdAt", EmitDefaultValue = false)]
        public DateTime CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedAt
        /// </summary>
        [DataMember(Name = "updatedAt", EmitDefaultValue = false)]
        public DateTime UpdatedAt { get; set; }

        /// <summary>
        /// Gets or Sets OrderData
        /// </summary>
        [DataMember(Name = "orderData", EmitDefaultValue = false)]
        public RmaOrderData OrderData { get; set; }

        /// <summary>
        /// Gets or Sets additional properties
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RmaReturnResponse {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Grn: ").Append(Grn).Append("\n");
            sb.Append("  OrderGrn: ").Append(OrderGrn).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Products: ").Append(Products).Append("\n");
            sb.Append("  PreferredRefundMethod: ").Append(PreferredRefundMethod).Append("\n");
            sb.Append("  RefundShippingCost: ").Append(RefundShippingCost).Append("\n");
            sb.Append("  RefundPaymentCost: ").Append(RefundPaymentCost).Append("\n");
            sb.Append("  CustomerInfo: ").Append(CustomerInfo).Append("\n");
            sb.Append("  ReturnAddress: ").Append(ReturnAddress).Append("\n");
            sb.Append("  Note: ").Append(Note).Append("\n");
            sb.Append("  History: ").Append(History).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("  OrderData: ").Append(OrderData).Append("\n");
            sb.Append("  AdditionalProperties: ").Append(AdditionalProperties).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
